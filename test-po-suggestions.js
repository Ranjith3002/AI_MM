// Test script for PO Suggestions functionality
// Run this with: node test-po-suggestions.js

const axios = require('axios');

async function testPOSuggestions() {
    console.log('üß™ Testing AI-Powered PO Suggestions...\n');
    
    const baseUrl = 'http://localhost:4004'; // Default CAP server URL
    
    try {
        // Test 1: Get PO Suggestions
        console.log('1Ô∏è‚É£ Testing getPOSuggestions endpoint...');
        const suggestionsResponse = await axios.get(`${baseUrl}/odata/v4/material/getPOSuggestions()`);
        
        console.log('‚úÖ PO Suggestions Response Status:', suggestionsResponse.status);
        
        const suggestionsData = typeof suggestionsResponse.data.value === 'string' 
            ? JSON.parse(suggestionsResponse.data.value) 
            : suggestionsResponse.data;
            
        console.log('üìä Suggestions Summary:');
        console.log(`   - Success: ${suggestionsData.success}`);
        console.log(`   - Message: ${suggestionsData.message}`);
        console.log(`   - Total Suggestions: ${suggestionsData.suggestions?.length || 0}`);
        
        if (suggestionsData.suggestions && suggestionsData.suggestions.length > 0) {
            console.log('\nüìã First Suggestion Details:');
            const firstSuggestion = suggestionsData.suggestions[0];
            console.log(`   - Material: ${firstSuggestion.materialName} (${firstSuggestion.materialID})`);
            console.log(`   - Supplier: ${firstSuggestion.supplierName}`);
            console.log(`   - Quantity: ${firstSuggestion.suggestedQuantity} ${firstSuggestion.unit}`);
            console.log(`   - Total Amount: ${firstSuggestion.currency} ${firstSuggestion.totalAmount}`);
            console.log(`   - Urgency: ${firstSuggestion.urgency}`);
            console.log(`   - AI Reasoning: ${firstSuggestion.aiReasoning}`);
            
            // Test 2: Create PO from Suggestion
            console.log('\n2Ô∏è‚É£ Testing createPurchaseOrder with suggestion data...');
            
            const poData = {
                materialID: firstSuggestion.materialID,
                material: firstSuggestion.materialName,
                supplierID: firstSuggestion.supplierID,
                supplier: firstSuggestion.supplierName,
                quantity: firstSuggestion.suggestedQuantity,
                unit: firstSuggestion.unit,
                unitPrice: firstSuggestion.unitPrice,
                currency: firstSuggestion.currency,
                deliveryDate: firstSuggestion.deliveryDate,
                notes: `Test PO from AI suggestion. ${firstSuggestion.aiReasoning}`,
                aiRecommendation: firstSuggestion.aiReasoning,
                isConfirmed: true,
                confirmedBy: "Test User"
            };
            
            const poResponse = await axios.post(`${baseUrl}/odata/v4/material/createPurchaseOrder`, poData);
            
            console.log('‚úÖ PO Creation Response Status:', poResponse.status);
            console.log('üìÑ Created PO Details:');
            console.log(`   - PO Number: ${poResponse.data.orderNumber}`);
            console.log(`   - Material: ${poResponse.data.material}`);
            console.log(`   - Supplier: ${poResponse.data.supplier}`);
            console.log(`   - Total Amount: ${poResponse.data.currency} ${poResponse.data.totalAmount}`);
            console.log(`   - Confirmed: ${poResponse.data.isConfirmed}`);
            console.log(`   - Confirmed By: ${poResponse.data.confirmedBy}`);
            console.log(`   - Generated by AI: ${poResponse.data.generatedByAI}`);
        }
        
        console.log('\n‚úÖ All tests completed successfully!');
        
    } catch (error) {
        console.error('‚ùå Test failed:', error.message);
        if (error.response) {
            console.error('   Response Status:', error.response.status);
            console.error('   Response Data:', error.response.data);
        }
        
        console.log('\nüí° Make sure the CAP server is running with: npm start');
        console.log('üí° And that the database is properly initialized with sample data');
    }
}

// Run the test
testPOSuggestions();
